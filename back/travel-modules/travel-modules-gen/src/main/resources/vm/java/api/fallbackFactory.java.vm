package ${packageName}.${moduleName}.api.factory;

import ${packageName}.${moduleName}.api.Remote${ClassName}Service;
import ${packageName}.common.core.domain.R;
import ${packageName}.${moduleName}.api.domain.${ClassName};
import org.apache.commons.compress.utils.Lists;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.cloud.openfeign.FallbackFactory;
import org.springframework.stereotype.Component;

import java.util.List;

/**
 * ${functionName} 远程服务降级回调
 *
 * @author ${author}
 * @date ${datetime}
 */
@Component
public class Remote${ClassName}FallbackFactory implements FallbackFactory<Remote${ClassName}Service> {
    private static final Logger log = LoggerFactory.getLogger(Remote${ClassName}FallbackFactory.class);

    @Override
    public Remote${ClassName}Service create(Throwable throwable) {
        log.error("${functionName}服务调用失败:{}", throwable.getMessage());

        return new Remote${ClassName}Service() {
            @Override
            public R<List<${ClassName}>> list(String source) {
                return R.fail(Lists.newArrayList(), "查询${functionName}列表信息失败:" + throwable.getMessage());
            }

            @Override
            public R<${ClassName}> getOne(Long id, String source) {
                return R.fail("查询${functionName}信息失败:" + throwable.getMessage());
            }
        };
    }
}
